{"version":3,"file":"uploader.min.js","sources":["../../../../../../ctrlv-frontend/src/js/libraries/ImagePaster.js","../../../../../resources/assets/uploader/js/uploader.js"],"names":["ImagePaster","url","console","log","this","debug","pasteCatcher","init","prototype","data","extra","self","document","createElement","setAttribute","id","body","appendChild","focus","addEventListener","event","onPaste","$","on","e","which","ctrlKey","metaKey","trigger","clipboardData","done","JSON","stringify","window","msConvertURL","fileList","files","length","i","uploadBlob","items","text","getData","uploadText","clearPasteCatcher","x","type","indexOf","getAsFile","setTimeout","checkPasteCatcher","innerHTML","child","childNodes","tagName","src","onFail","uploadImage","href","blob","reader","FileReader","onload","evt","target","result","readAsDataURL","upload","base64","format","ajax","timeout","error","jqXHR","textStatus","message","responseJSON","errorType","status","statusText","success","res","image","validateURL","regex","RegExp","test","host","opener","frames","location","hash","substring","title","xDomainError","setApp","browserHostError","alert","preventDefault","addClass","removeClass","css","sendData","close","viewUrl","imageUrl","attr","find"],"mappings":"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","sourcesContent":["var ImagePaster = (function () {\n    \"use strict\";\n\n    var ImagePaster = function (url) {\n        console.log('new ImagePaster', url);\n        this.debug = true;\n        this.url = url;\n        this.pasteCatcher = null;\n        this.init();\n    };\n\n    ImagePaster.prototype.log = function (data, extra) {\n        if (this.debug) {\n            console.log(data, extra);\n        }\n    };\n\n    ImagePaster.prototype.init = function () {\n\n        var self = this;\n\n        /**\n         * Firefox allows images to be pasted into contenteditable elements.\n         * So create one of those on the page and make it have focus,\n         * so paste events happen into that\n         */\n\n            // Create paste catcher element\n        self.pasteCatcher = document.createElement('div');\n        self.pasteCatcher.setAttribute('contenteditable', '');\n        self.pasteCatcher.setAttribute('style', 'position:absolute; opacity:0; top:0; left:0; width:0; height:0;');\n        self.pasteCatcher.id = 'paste-catcher';\n        document.body.appendChild(self.pasteCatcher);\n        self.pasteCatcher.focus();\n\n        // Listen for the 'paste' event on the body\n        //if (browserName == 'IE') {\n        //$('body').on('paste', function(event) { self.onPaste(event); });\n        //} else {\n        document.addEventListener('paste', function (event) {\n            self.onPaste(event);\n        });\n        //}\n\n        // Watch for ctrl + v being pressed\n        $(document).on('keydown', function (e) {\n            // 86 = v\n            if (e.which === 86 && (e.ctrlKey || e.metaKey)) {\n                $(document).trigger('ctrlVPressed');\n            }\n        });\n\n        // Focus paste catcher when cmd or ctrlv is pressed\n        $(document).on('ctrlVPressed', function () {\n            self.pasteCatcher.focus();\n        });\n\n    };\n\n    ImagePaster.prototype.onPaste = function (event) {\n\n        var self = this;\n        var done = false;\n        var clipboardData;\n\n        self.log('onPaste', JSON.stringify(event));\n\n        if (event.clipboardData) {\n            // Chrome\n            clipboardData = event.clipboardData;\n        } else if (window.clipboardData) {\n            // IE\n            clipboardData = window.clipboardData;\n        } else {\n            // Firefox\n            //setTimeout(this.checkPasteCatcher, 1);\n        }\n\n        // IE\n        if (event.msConvertURL) {\n            var fileList = clipboardData.files;\n            if (fileList.length > 0) {\n                for (var i = 0; i < fileList.length; i++) {\n                    self.uploadBlob(fileList[i]);\n                    done = true;\n                }\n            }\n        }\n\n        // Check if there is something in the paste event itself\n        if (clipboardData && clipboardData.items) {\n\n            var text;\n            // If there was some text on the clipboard,\n            // it might be a URL. Try and paste that...\n            if ((text = clipboardData.getData(\"text/plain\"))) {\n                self.uploadText(text);\n                self.clearPasteCatcher();\n                return;\n            }\n\n            // Loop through all the clipboardData\n            for (var x = 0; x < clipboardData.items.length; x++) {\n                // If this clipboard item claims to be an image, upload it\n                if (clipboardData.items[x].type.indexOf('image') !== -1) {\n                    self.uploadBlob(clipboardData.items[x].getAsFile());\n                    done = true;\n                }\n            }\n        }\n\n        // If there was nothing found in the clipboard data\n        // fall back to checking if there's anything in the editable element\n        if (done) {\n            self.clearPasteCatcher();\n        } else {\n            setTimeout(\n                function () {\n                    self.checkPasteCatcher();\n                },\n                10\n            );\n        }\n    };\n\n    /**\n     * Check if anything has been pasted into the paste catcher element\n     * (Firefox + Safari?)\n     */\n    ImagePaster.prototype.checkPasteCatcher = function () {\n\n        var text = this.pasteCatcher.innerHTML;\n        var child = this.pasteCatcher.childNodes[0];\n\n        if (child) {\n            if (child.tagName === 'IMG') {\n                if (child.src.indexOf('webkit-fake-url://') != -1) {\n                    this.onFail('Sorry, Safari does not currently support pasting images.');\n                    return false;\n                }\n                this.uploadImage(child.src);\n            } else if (child.tagName === 'A') {\n                this.uploadText(child.href);\n            } else {\n                this.uploadText(text);\n            }\n        }\n\n        this.clearPasteCatcher();\n    };\n\n    ImagePaster.prototype.clearPasteCatcher = function () {\n        var self = this;\n        setTimeout(\n            function () {\n                self.pasteCatcher.innerHTML = '';\n            },\n            1\n        );\n    };\n\n    ImagePaster.prototype.uploadBlob = function (blob) {\n        if (blob) {\n            var self = this;\n            var reader = new FileReader();\n            reader.onload = function (evt) {\n                self.uploadImage(evt.target.result);\n            };\n            reader.readAsDataURL(blob);\n        }\n    };\n\n    ImagePaster.prototype.uploadText = function (text) {\n        console.log('uploadText', text);\n        return this.upload('text', text);\n\n        /*if (this.validateURL(url)) {\n         upload('url', url);\n         } else {\n         failedUpload(\"Can't upload that. Try pasting an image or URL.\");\n         }*/\n    };\n\n    ImagePaster.prototype.uploadImage = function (base64) {\n        return this.upload('uploadImage', base64);\n\n        /*convertImageToJpeg(base64, function(jpegBase64){\n         upload('base64', jpegBase64);\n         });*/\n    };\n\n    /*ImagePaster.prototype.convertImageToJpeg = function(base64, callback)\n     {\n     //Convert image to a JPG so it's faster to upload\n     var img = new Image();\n     img.onload = function()\n     {\n     var canvas = convertImageToCanvas(this);\n     var data = canvas.toDataURL('image/jpeg' , 0.8);\n     callback(data);\n     };\n     img.src = base64;\n     };*/\n\n    /*ImagePaster.prototype.convertImageToCanvas = function(image)\n     {\n     var canvas = document.createElement(\"canvas\");\n     canvas.width = image.width;\n     canvas.height = image.height;\n\n     var context = canvas.getContext(\"2d\");\n     context.fillStyle = \"#ffffff\";\n     context.fillRect(0,0,image.width,image.height);\n     context.drawImage(image, 0, 0);\n\n     return canvas;\n     };*/\n\n    ImagePaster.prototype.upload = function (format, data) {\n\n        var self = this;\n        $(document).trigger('ctrlvuploadstart');\n\n        $.ajax({\n            url: this.url,\n            timeout: 90000,\n            type: 'POST',\n            data: {\n                format: format,\n                base64: data\n            },\n            error: function (jqXHR, textStatus) {\n                // Turn this error message into something useful\n                var message;\n                switch (textStatus) {\n                    case 'timeout':\n                        message = 'The image took too long to upload';\n                        break;\n                    case 'error':\n\n                        if (jqXHR.responseJSON && jqXHR.responseJSON.message) {\n                            message = 'CtrlV server error (' + jqXHR.responseJSON.errorType + ' ' + jqXHR.responseJSON.message + ')';\n                        } else if (jqXHR.status !== 0) {\n                            message = 'CtrlV server error (' + jqXHR.status + ' ' + jqXHR.statusText + ')';\n                        } else {\n                            message = 'Can\\'t connect to the CtrlV server';\n                        }\n                        break;\n                    case 'abort':\n                        message = 'The upload was cancelled';\n                        break;\n                    case 'parsererror':\n                        message = 'Error uploading: couldn\\'t decode the response from the server';\n                        break;\n                    default:\n                        message = textStatus;\n                        break;\n                }\n\n                self.onFail(message);\n            },\n            success: function (res) {\n                if (res.image) {\n                    $(document).trigger({\n                        type: 'ctrlvuploadcomplete',\n                        image: res.image\n                    });\n                } else {\n                    self.onFail(res.message);\n                }\n            }\n        });\n    };\n\n    ImagePaster.prototype.onFail = function (message) {\n        $(document).trigger({\n            type: 'ctrlvuploaderror',\n            message: message ? message : false\n        });\n    };\n\n    ImagePaster.prototype.validateURL = function (text) {\n        var regex = new RegExp(\"^(http|https|ftp)\\://([a-zA-Z0-9\\.\\-]+(\\:[a-zA-Z0-9\\.&amp;%\\$\\-]+)*@)*((25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])|([a-zA-Z0-9\\-]+\\.)*[a-zA-Z0-9\\-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(\\:[0-9]+)*(/($|[a-zA-Z0-9\\.\\,\\?\\'\\\\\\+&amp;%\\$#\\=~_\\-]+))*$\");\n        return regex.test(text);\n    };\n\n    return ImagePaster;\n}());\n","var host;\nif (window.opener && window.opener.frames.length > 0) {\n    /**\n     * easyXDM Magic\n     */\n    var target = location.hash.substring(9);\n    target = 'easyXDM_' + target + '_provider';\n    host = window.opener.frames[target];\n    if (window.opener) {\n        try {\n            // test if we have access to the document\n            if (window.opener.document.title) {\n                host = window.opener;\n            }\n        } catch (xDomainError) {\n            // we have an opener, but it's not on our domain,\n            host = window.opener.frames[target];\n        }\n\n        if (host) {\n            try {\n                host.setApp(window);\n            } catch (browserHostError) {\n                alert(\"was unable to gain a reference to the iframe\");\n            }\n        }\n    }\n}\n\n/**\n * Now stuff we actually understand\n */\nvar image = null;\n\n$(document).on('click', '#restart-btn', function(e){\n    e.preventDefault();\n    $('.upload-status').addClass('out');\n    $('#upload-waiting').removeClass('out');\n    $('#uploader').css('background-image','');\n    image = null;\n});\n\n$(document).on('click', '#accept-btn', function(e){\n    e.preventDefault();\n    if (host) {\n        host.sendData({image: image});\n        setTimeout(function(){\n            window.close();\n        }, 500);\n    }\n});\n\n$(document).on('ctrlvuploadstart', function(){\n    $('.upload-status').addClass('out');\n    $('#upload-loading').removeClass('out');\n});\n\n$(document).on('ctrlvuploadcomplete', function(e){\n    $('.upload-status').addClass('out');\n    $('#upload-complete').removeClass('out');\n    var viewUrl = e.image.url;\n    var imageUrl = e.image.image.url;\n    $('#view-btn').attr('href', viewUrl);\n    $('#uploader').css('background-image','url(' + imageUrl + ')');\n});\n\n$(document).on('ctrlvuploaderror', function(e){\n    $('.upload-status').addClass('out');\n    $('#upload-error').removeClass('out').find('p').text(e.message);\n});\n\n$(document).on('keyup', function(e) {\n    // Highlighting keys when pressing\n    if (e.which == 91 || e.which === 224) { // cmd\n        $('.btn-cmd').removeClass('active');\n    } else if (e.which == 17) { // ctrl\n        $('.btn-ctrl').removeClass('active');\n    } else if (e.which == 86) { // v\n        $('.btn-v').removeClass('active');\n    }\n});\n\n$(document).on('keydown', function(e) {\n\n    console.log(e);\n\n    // Highlighting keys when pressing\n    if (e.which == 91 || e.which === 224) { // cmd (91 in\n        $('.btn-cmd').addClass('active');\n    } else if (e.which == 17) { // ctrl\n        $('.btn-ctrl').addClass('active');\n    } else if (e.which == 86) { // v\n        $('.btn-v').addClass('active');\n    }\n});\n"]}